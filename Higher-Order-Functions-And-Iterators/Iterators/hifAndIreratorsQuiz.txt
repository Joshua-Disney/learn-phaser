INITIAL SCORE: 8/9  88%
RETAKING QUIZ TO ADJUST SCORE TO 100%



1: The included code snippet includes a function assigned to the variable sum. Given the fact that Javascript functions are first-class objects, fill in the blanks so that a property of sum called name is assigned the String value, ‘summation’.

const sum = (x, y) => x + y;
sumname  'summation';

A: ..
B: ===
C: ,
D: =
E: .
F: ==

My guess: E & D
CORRECT


2: In the following Javascript code snippet, the callback function cb is a function that sums the value of two numbers.

Fill in the blank so that when the function is passed into the higher order function hof, it is then invoked so that the value returned is 8.

let cb = (n1, n2) => {return n1 + n2};
 
let hof = (func) => {
  let value = ;
  return `this function returned ${value}`;
}
 
hof(cb) // 'this function returned 8'

A: func(2, 4)
B: cb(3, 5)
C: cb(2, 4)
D: func(3, 5)

My guess: D
CORRECT


3: What is the value of foundElement after the code runs?

const randomNums = [1, 123, 25, 90, 3543, 42];
const foundElement = randomNums.findIndex(num => num > 200);

A: undefined
B: 4
C: true
D: 3543

My guess: B
CORRECT


4: Select the option that correctly assigns the increment function to the variable incrementHolder.

const increment = (salary) => {
  const revisedSalary = salary + 5;
  console.log(revisedSalary);
  return revisedSalary;
}

A: const incrementHolder = incrementSalary;
B: increment(5500);
C: const incrementHolder = increment(5500);
D: const incrementHolder = increment;

My guess: D
CORRECT


5: Examine the below code. Which of the functions represents a higher-order function?

let multiplyTwoValues = (val1, val2) => { 
  return val1 * val2; 
}
 
let square = (val) => { 
  return val * val; 
}
 
let getFunctionString = (func) => { 
  return func.toString(); 
}
 
let result = multiplyTwoValues(2, 2);
square(result);

A: square()
B: multiplyTwoValues()
C: result
D: getFunctionString()

My guess: D
CORRECT


6: Use the .map() method on the oddNumbers array to return each number multiplied by 2 into the evenNumbers array.

const oddNumbers = [1, 3, 5, 7];
const evenNumbers = (number => {
  return  * 2  
});

A: number
B: evenNumbers
C: oddNumbers
D: allNumbers
E: .map
F: .forEach

My guess: C & E & A
CORRECT


7: Which of the following methods returns an array with values that evaluate to truthy based on the condition in the method’s block?

A: .forEach()
B: .map()
C: .filter()
D: .some()

My guess: D
INCORRECT
ACTUAL ANSWER: C


8: Fill in the blanks to make addItUp log 100 to the console.

const nums = [1, 2, 3, 4];
const initializer = 90;
 
const addItUp = nums((accumulator, currentValue) => {
  return  + ;
}, );
 
console.log(addItUp);

A: initializer
B: currentValue
C: .map
D: .reduce
E: accumulator

My guess: D > E > B > A
CORRECT


9: Which of the following iterator methods returns undefined?


A: .filter()
B: .some()
C: .forEach()
D: .map()

My guess: C
CORRECT
